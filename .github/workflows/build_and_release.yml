name: "Build and Release"

on:
  workflow_dispatch:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  release:
    types:
      - released
  schedule:
    - cron: "0 0 * * *"

jobs:
  static-build_zlib_and_libexpat:
    runs-on: ubuntu-24.04
    container:
      image: ubuntu:rolling
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install prerequisites
        run: |
          apt-get update
          # DEBIAN_FRONTEND=noninteractive sudo apt-get upgrade -y
          apt-get install -y --no-install-recommends \
              make binutils autoconf automake autotools-dev libtool \
              patch ca-certificates \
              pkg-config git wget curl dpkg-dev \
              autopoint libcppunit-dev lzip jq unzip lld rsync
      - name: Compile
        env:
          CROSS_HOST: "x86_64-w64-mingw32"
        run: |
          if [ "${GITHUB_EVENT_NAME}" = release ]; then
            export ARIA2_VER="${GITHUB_REF#refs/*/}"
            echo "ARIA2_VER=${ARIA2_VER}" >> $GITHUB_ENV
          fi
          chmod +x "${GITHUB_WORKSPACE}/build.sh"
          "${GITHUB_WORKSPACE}/build.sh"
      - name: Archive aria2c.exe
        uses: actions/upload-artifact@v4
        with:
          name: aria2c.exe
          path: "${{ github.workspace }}/aria2c.exe"
      - name: Upload build info
        uses: actions/upload-artifact@v4
        with:
          name: build-info
          path: "${{ github.workspace }}/build_info.md"
  static-build_zlib_ng_and_libxml2:
    runs-on: ubuntu-24.04
    #container: "rzhy/ubuntu:x86_64-w64-mingw32"
    container:
      image: ubuntu:rolling
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install prerequisites
        run: |
          apt-get update
          apt-get install -y --no-install-recommends \
              automake  autoconf autopoint jq libtool \
              make pkgconf wget curl tcl \
              ca-certificates unzip lld rsync
      - name: Compile
        env:
          CROSS_HOST: "x86_64-w64-mingw32"
        run: |
          if [ "${GITHUB_EVENT_NAME}" = release ]; then
            export ARIA2_VER="${GITHUB_REF#refs/*/}"
            echo "ARIA2_VER=${ARIA2_VER}" >> $GITHUB_ENV
          fi
          chmod +x "${GITHUB_WORKSPACE}/build1.sh"
          "${GITHUB_WORKSPACE}/build1.sh"
      - name: Archive aria2c1.exe
        uses: actions/upload-artifact@v4
        with:
          name: aria2c1.exe
          path: "${{ github.workspace }}/aria2c1.exe"
      - name: Upload build info
        uses: actions/upload-artifact@v4
        with:
          name: build-info1
          path: "${{ github.workspace }}/build_info1.md"
  release-build-info :
    runs-on: ubuntu-24.04
    needs: [static-build_zlib_and_libexpat, static-build_zlib_ng_and_libxml2]
    if: always()
    steps:
      - name: 下载构建信息1
        uses: actions/download-artifact@v4
        with:
          name: build-info
          path: release-folder
      - name: 下载构建信息2
        uses: actions/download-artifact@v4
        with:
          name: build-info1
          path: release-folder
      - name: 下载aria2c.exe
        uses: actions/download-artifact@v4
        with:
          name: aria2c.exe
          path: release-folder
      - name: 下载aria2c1.exe
        uses: actions/download-artifact@v4
        with:
          name: aria2c1.exe
          path: release-folder
      - name: 创建发布说明文件
        run: |
          mkdir -p ${{ github.workspace }}/release-folder
          cat release-folder/build_info.md release-folder/build_info1.md > ${{ github.workspace }}/release-folder/release_notes.md
      - name: 获取版本号
        run: |
          VERSION=$(wget -qO- https://raw.githubusercontent.com/aria2/aria2/master/NEWS | grep -oP 'aria2 \K\d+(\.\d+)*')
          echo "ARIA2_VERSION=${VERSION}" >> $GITHUB_ENV
      - name: 创建发布
        uses: ncipollo/release-action@v1
        with:
          tag: aria2c-${{ env.ARIA2_VERSION }}
          allowUpdates: true
          artifacts: ${{ github.workspace }}/release-folder/aria2c.exe, ${{ github.workspace }}/release-folder/aria2c1.exe
          bodyFile: ${{ github.workspace }}/release-folder/release_notes.md
          token: ${{ secrets.GITHUB_TOKEN }}
    
