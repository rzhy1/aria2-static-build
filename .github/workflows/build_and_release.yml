name: "Build and Release"

on:
  workflow_dispatch:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  release:
    types:
      - released
  schedule:
    - cron: "0 0 * * *"

jobs:
  static-build_zlib_and_libexpat:
    runs-on: ubuntu-24.04
    container:
      image: ubuntu:rolling
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install prerequisites
        run: |
          apt-get update
          # DEBIAN_FRONTEND=noninteractive sudo apt-get upgrade -y
          apt-get install -y --no-install-recommends \
              make binutils autoconf automake autotools-dev libtool \
              patch ca-certificates \
              pkg-config git wget curl dpkg-dev \
              autopoint libcppunit-dev lzip jq unzip lld rsync
      - name: Compile
        env:
          CROSS_HOST: "x86_64-w64-mingw32"
        run: |
          chmod +x "${GITHUB_WORKSPACE}/build.sh"
          "${GITHUB_WORKSPACE}/build.sh"
  static-build_zlib_ng_and_libxml2:
    runs-on: ubuntu-24.04
    #container: "rzhy/ubuntu:x86_64-w64-mingw32"
    container:
      image: ubuntu:rolling
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install prerequisites
        run: |
          apt-get update
          apt-get install -y --no-install-recommends \
              automake  autoconf autopoint jq libtool \
              make pkgconf wget curl tcl \
              ca-certificates unzip lld rsync
      - name: Compile
        env:
          CROSS_HOST: "x86_64-w64-mingw32"
        run: |
          chmod +x "${GITHUB_WORKSPACE}/build1.sh"
          "${GITHUB_WORKSPACE}/build1.sh"

  release:
    runs-on: ubuntu-24.04
	needs: [static-build_zlib_and_libexpat, static-build_zlib_ng_and_libxml2]
	if: always()
    steps:
      - name: Merge release notes
        run: |
          mkdir -p release
          cat ${{ github.workspace }}/*.md > release/merged_release_notes.md
      - name: Get Version
        run: |
          VERSION=$(wget -qO- https://raw.githubusercontent.com/aria2/aria2/master/NEWS | grep -oP 'aria2 \K\d+(\.\d+)*')
          echo "ARIA2_VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ github.workspace }}/aria2c.exe
            ${{ github.workspace }}/aria2c1.exe
          tag_name: aria2c-${{ env.ARIA2_VERSION }}
          name: aria2c-${{ env.ARIA2_VERSION }}
          body_path: ${{ github.workspace }}/release/merged_release_notes.md
          append_body: false
