name: "Build and Release"

on:
  workflow_dispatch:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  release:
    types:
      - released
  schedule:
    - cron: "0 0 * * 6"

jobs:
  static-build_zlib_and_libexpat:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/cache@v4
        id: cache
        with:
          path: downloads/
          key: build-cache-x86_64-w64-mingw32-${{ github.sha }}
          restore-keys: |
            build-cache-x86_64-w64-mingw32-
      - name: Install prerequisites
        run: |
          echo "⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐$(date '+%Y/%m/%d %a %H:%M:%S.%N') - Updating and upgrading packages"
          apt update
          apt upgrade -y
          echo "⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐$(date '+%Y/%m/%d %a %H:%M:%S.%N') - Installing required packages"
          apt install -y --no-install-recommends \
              make binutils autoconf automake autotools-dev libtool \
              patch ca-certificates \
              pkg-config git curl dpkg-dev gcc-mingw-w64 g++-mingw-w64 \
              autopoint libcppunit-dev libxml2-dev lzip 
      - name: Compile
        env:
          CROSS_HOST: "x86_64-w64-mingw32"
        run: |
          if [ "${GITHUB_EVENT_NAME}" = release ]; then
            export ARIA2_VER="${GITHUB_REF#refs/*/}"
            echo "ARIA2_VER=${ARIA2_VER}" >> $GITHUB_ENV
          fi
          chmod +x "${GITHUB_WORKSPACE}/build.sh"
          "${GITHUB_WORKSPACE}/build.sh"
      - name: Archive aria2c.exe
        uses: actions/upload-artifact@v4
        with:
          name: aria2c.exe
          path: "${{ github.workspace }}/aria2/src/aria2c.exe"
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: aria2c
          allowUpdates: true
          artifacts: "${{ github.workspace }}/aria2/src/aria2c.exe"
          token: ${{ secrets.GITHUB_TOKEN }}
  static-build_zlib_ng_and_libxml2:
    runs-on: ubuntu-24.04
    container: "rzhy/ubuntu:x86_64-w64-mingw32"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/cache@v4
        id: cache
        with:
          path: downloads/
          key: build-cache-x86_64-w64-mingw32-${{ github.sha }}
          restore-keys: |
            build-cache-x86_64-w64-mingw32-
      - name: Compile
        env:
          CROSS_HOST: "x86_64-w64-mingw32"
        run: |
          if [ "${GITHUB_EVENT_NAME}" = release ]; then
            export ARIA2_VER="${GITHUB_REF#refs/*/}"
            echo "ARIA2_VER=${ARIA2_VER}" >> $GITHUB_ENV
          fi
          chmod +x "${GITHUB_WORKSPACE}/build1.sh"
          "${GITHUB_WORKSPACE}/build1.sh"
      - name: Archive aria2c1.exe
        uses: actions/upload-artifact@v4
        with:
          name: aria2c1.exe
          path: "${{ github.workspace }}/aria2c1*"
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: aria2c
          allowUpdates: true
          artifacts: "${{ github.workspace }}/aria2c1*"
          bodyFile: "${{ github.workspace }}/build_info.md"
          token: ${{ secrets.GITHUB_TOKEN }}
